/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DK_AA LBKT
#define DK_AE SEMI
#define DK_OE SQT

// Shifted characters
//#define DK_SECT LSFT(KC_GRV)  // §
//#define DK_EXLM LSFT(KC_1)    // !
//#define DK_DQUO LSFT(KC_2)    // "
//#define DK_HASH LSFT(KC_3)    // #
//#define DK_CURR LSFT(KC_4)    // ¤
//#define DK_PERC LSFT(KC_5)    // %
//#define DK_AMPR LSFT(KC_6)    // &
//#define DK_SLSH LSFT(KC_7)    // /
//#define DK_LPRN LSFT(KC_8)    // (
//#define DK_RPRN LSFT(KC_9)    // )
//#define DK_EQL  LSFT(KC_0)    // =
//#define DK_QUES LSFT(KC_MINS) // ?
//#define DK_SCLN LSFT(KC_COMM)	// ;
//define DK_TICK LSFT(KC_EQL)	// `
#define DK_PLUS FSLH
#define DK_MINUS PLUS

// Alt-Gr keys
//#define DK_AT   RALT(KC_2)      // @
//#define DK_PND  RALT(KC_3)      // £
//#define DK_DOL  RALT(KC_4)	// $
//#define DK_EUR  RALT(KC_5)	// €
//#define DK_PIPE RALT(KC_EQL)	// |
#define DK_LPRN LS(N8)	// (
#define DK_RPRN LS(N9)	// )
#define DK_LCBR RA(RS(N8))  // {
#define DK_RCBR RA(RS(N9))	// }
#define DK_LBRC RA(N8)	// [
#define DK_RBRC RA(N9)	// ]
//#define DK_ASTX LSFT(KC_NUHS)	// asterisk
//#define DK_BSLH RALT(KC_NUBS)	// backslash
//#define DK_TILD RALT(KC_RBRC) // ~

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
// |             |      Q      |      W      |      E      |      R      |      T      |   |      Y      |      U      |      I      |      O      |      P      |            |
        &trans        &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P        &trans
// |             |      A      |      S      |      D      |      F      |      G      |   |      H      |      J      |      K      |      L      |      Æ      |            |
        &trans       &kp A          &kp S         &kp D         &kp F         &kp G             &kp H         &kp J         &kp K         &kp L       &kp DK_AE      &trans
// |             |      Z      |      X      |      C      |      V      |      B      |   |      N      |      M      |      ,      |      .      |      Ø      |            |
        &trans       &kp Z          &kp X         &kp C         &kp V         &kp B             &kp N         &kp M       &kp COMMA      &kp DOT      &kp DK_OE      &trans
//                                           |    SHIFT    |  LWR / TAB  |  CTRL / SPC |   |   CMD/ENT   |  RSE / BSPC |     ALT     |
                                              &mt LSHFT ESC &lt 1 TAB   &mt LCTRL SPACE    &mt RGUI RET  &lt 2 BSPC    &kp RALT
                        >;
                };
                lower_layer {
                        bindings = <
// |             |     1      |      2      |      3      |      4      |      5      |   |      6      |      7      |      8      |      9      |      0      |             |   
       &trans        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9       &kp N0         &trans
// |             |   VOL DWN  |   VOL UP    |      PP     |     PREV    |     NEXT    |   |             |     LFT     |      DWM    |     UP      |     RGT     |             |
       &trans     &kp C_VOL_DN  &kp C_VOL_UP    &kp C_PP    &kp C_PREV    &kp C_NEXT           &trans       &kp LEFT      &kp DOWN       &kp UP      &kp RIGHT        &trans
// |             |    BT 1    |     BT 2    |     BT 3    |             |             |   |             |             |             |             |      Å       |             | 
       &trans     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &trans         &trans           &trans        &trans        &trans        &trans      &kp DK_AA       &trans
//                                          |             |             |             |   |             |             |             |           
                                                &trans         &trans        &trans          &trans        &trans       &trans
                        >;
                };

                raise_layer {
                        bindings = <
// |             |      !      |      @      |      #      |      $      |      %      |   |      ^      |      &      |      (      |      )      |      *      |            | 
       &trans       &kp EXCL       &kp AT      &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      &kp DK_LPRN  &kp DK_RPRN   &kp KP_MULTIPLY    &trans
// |             |             |             |             |             |             |   |      -      |      =      |      {      |      }      |      \      |            |
       &trans         &trans        &trans        &trans        &trans        &trans         &kp DK_MINUS   &kp DK_MINUS    &kp DK_LCBR   &kp DK_RCBR     &kp BSLH        &trans
// |             |             |             |             |             |             |   |      _      |      +      |      [      |      ]      |     "|"     |            |
       &trans         &trans        &trans        &trans        &trans        &trans         &kp UNDER      &kp PLUS     &kp DK_LBRC   &kp DK_RBRC    &kp PIPE       &trans
//                                           |     CMD     |             |     SPC     |   |     ENT     |             |     ALT     |
                                                &trans         &trans        &trans            &trans        &trans        &trans 
                        >;
                };
        };
};
